import html
from pathlib import Path
from aiogram import Router, F, types
from aiogram.types import CallbackQuery, InputMediaPhoto

from bot.handlers.user.menu_command import show_donate_menu, show_menu_about_us, show_menu_contacts, show_products_menu, show_start_menu
from bot.keyboards.user.keyboards import get_show_bank, get_support_us
from bot.keyboards.user.products_keyboard import get_show_faq, get_show_price
from bot.parsers.products_parser import parse_products_page

router = Router()

@router.callback_query(F.data == "back_to_main")
async def back_to_menu(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ù–∞–∑–∞–¥' –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    await show_start_menu(callback, edit=True)  # –†–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

@router.callback_query(F.data == "contacts")
async def menu_contacts(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ö–æ–Ω—Ç–∞–∫—Ç—ã'"""
    await show_menu_contacts(callback, edit=True)
    
@router.callback_query(F.data == "menu_about_us")
async def menu_about_us(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–û –Ω–∞—Å'"""
    await show_menu_about_us(callback, edit=True)
    
@router.callback_query(F.data == "donate")
async def menu_support_us(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ü–æ–¥–¥–µ—Ä–∂–∞—Ç—å'"""
    await show_donate_menu(callback, edit=True)

@router.callback_query(F.data.startswith('bank_'))
async def support_us_callback(callback: CallbackQuery):
    """–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ –±–∞–Ω–∫–∞."""
    bank_name = callback.data.split('_')[1]
    bank_description = {
        "sberbank": (
                    "üè¶ <b>–°–±–µ—Ä–±–∞–Ω–∫</b>\n\n"
                    "–ü–æ–ª—É—á–∞—Ç–µ–ª—å: <i>–°–µ—Ä–≥–µ–π –ò–≤–∞–Ω–æ–≤–∏—á –ö.</i>\n"
                    "–ö–∞—Ä—Ç–∞: <code>4276 6800 1260 0464</code>\n"
                    "–¢–µ–ª–µ—Ñ–æ–Ω, –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–π –∫ –∫–∞—Ä—Ç–µ: <code>+7 950 173 48 38</code>"
        ),
        "mtsbank": (
                    "üí≥ <b>–ú–¢–° –ë–∞–Ω–∫</b>\n\n"
                    "–í—ã –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏ —Å—Ä–µ–¥—Å—Ç–≤–∞, –ø–æ–ø–æ–ª–Ω–∏–≤ –±–∞–ª–∞–Ω—Å —Ç–µ–ª–µ—Ñ–æ–Ω–∞:\n"
                    "<code>+7 912 756 82 80</code>"
        ),
        "mailrussia": (
                    "üìÆ <b>–ü–æ—á—Ç–∞ –†–æ—Å—Å–∏–∏</b>\n\n"
                    "–ê–¥—Ä–µ—Å –¥–ª—è –ø–æ—á—Ç–æ–≤—ã—Ö –ø–µ—Ä–µ–≤–æ–¥–æ–≤:\n"
                    "<i>427550, –£–¥–º—É—Ä—Ç—Å–∫–∞—è –†–µ—Å–ø—É–±–ª–∏–∫–∞,\n"
                    "–ø. –ë–∞–ª–µ–∑–∏–Ω–æ, –∞/—è 24,\n"
                    "–ö–æ—â–µ–µ–≤—É –°–µ—Ä–≥–µ—é –ò–≤–∞–Ω–æ–≤–∏—á—É</i>"
        )
        }
    bank_info = bank_description.get(bank_name)
    markup = get_show_bank()
    if not bank_info:
        await callback.answer('‚ùå –°–ø–æ—Å–æ–± –Ω–µ –Ω–∞–π–¥–µ–Ω', show_alert=True)
        return
        
    await callback.message.edit_text(
    bank_info, reply_markup=markup
    )
    
@router.callback_query(lambda c: c.data == 'menu_products')
async def menu_products(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ü—Ä–æ–¥—É–∫—Ü–∏—è' –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é"""
    await show_products_menu(callback, edit=True)

@router.callback_query(F.data == 'show_price')
async def menu_show_price(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–¶–µ–Ω–∞ –≥–∞–∑–µ—Ç—ã' –∏–∑ –ü—Ä–æ–¥—É–∫—Ü–∏—è"""
    data = parse_products_page()
    main_price = data.get('price', "–¶–µ–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ üòî")
    price_delivery = data.get('price_delivery', [])
    text = (
        "üí∞ <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ü–µ–Ω–∞—Ö</b>\n\n"
        f"{main_price}\n\n"
    )
    if price_delivery:
        text += "üì¶ <b>–¶–µ–Ω—ã —Å –ø–µ—Ä–µ—Å—ã–ª–∫–æ–π –ø–æ –†–æ—Å—Å–∏–∏:</b>\n"
        for count, price in price_delivery:
            text += f"‚Ä¢ {count}: <b>{price}</b>\n"
            
    markup = get_show_price()
    await callback.message.edit_text(text, reply_markup=markup)

@router.callback_query(F.data == 'show_faq')
async def menu_show_faq(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ '–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã' –∏–∑ –ü—Ä–æ–¥—É–∫—Ü–∏—è"""
    data = parse_products_page()
    questions = data.get('popular_questions', [])
    
    if not questions:
        await callback.answer('–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã üòî', show_alert=True)
        return
    
    text = (
        '‚ùì <b>–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã:</b>\n\n'
    )
    for question, answer in questions:
        text += f'üîπ <b>{question}</b>\n<blockquote>{answer}</blockquote>\n\n'
        
    markup = get_show_faq()
    await callback.message.edit_text(text, reply_markup=markup)
    